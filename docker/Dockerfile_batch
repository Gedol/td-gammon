# This needs to be moved and put inside a directory has both td-gammon and gym-gammon as 
# subdirectories.


# based of https://github.com/bluxmit/alnoda-workspaces/blob/main/workspaces/ubuntu-workspace/Dockerfile
# but simplified extremely.

# Use Ubuntu ltr "Jammy Jellyfish" base docker
FROM ubuntu:22.04

# Install basic programs like git and python
RUN export DEBIAN_FRONTEND=noninteractive \
    && apt-get -y update \ 
    && echo "------------------------------------------------------ Common" \
    && apt-get install -y sudo jq git \
    && echo "------------------------------------------------------ Python" \
    && apt-get install -y python3-distutils \
    && apt-get install -y python3-pip \
    && pip install --upgrade pip \
    && pip install --upgrade setuptools \
    && pip install --upgrade distlib \
    && apt-get install -y python-is-python3
    

# add just requirements file so we can install things before we add the soucre code
# thus changes to source code will not require this expensive step
# to be repeated.
ADD td-gammon/requirements.txt ./tmp_tdg_requirements.txt

# original code requires an older gym, I found that 0.21 works, but gym 0.21
# installation is broken with more recent versions. To install gym 0.21 need
# earlier version of pip, as discussed here:
# 	  https://github.com/openai/gym/issues/3176
# This step is expensive b/c it installs PyTorch, nvidia cuda, etc...
RUN export DEBIAN_FRONTEND=noninteractive \
&& pip install pyglet \
&& pip install setuptools==65.5.0 pip==21 \
&& pip3 install -r ./tmp_tdg_requirements.txt

# install gnubg
RUN export DEBIAN_FRONTEND=noninteractive \
&& apt-get -y update \
&& apt-get install -y gnubg

RUN export DEBIAN_FRONTEND=noninteractive \
&& sudo apt-get install -y python3-packaging \
&& sudo apt-get install -y python3-pyparsing

# Add source files, gotten from calling
# git clone https://github.com/Gedol/gym-backgammon
# git clone -b exp https://github.com/Gedol/td-gammon
ADD gym-backgammon ./gym-backgammon

# install gym-backgammon
RUN export DEBIAN_FRONTEND=noninteractive \
&& cd gym-backgammon/ \
&& pip3 install -e .

ADD td-gammon ./td-gammon 

# make saved_models directory inside of td-gammon where models will be saved.
RUN export DEBIAN_FRONTEND=noninteractive \
&& cd td-gammon/td_gammon \
&& mkdir mkdir saved_models

# train testmodel, anaylze with gnubg
RUN export DEBIAN_FRONTEND=noninteractive \
&& cd td-gammon/td_gammon \
&& TMP_TRAIN_NAME="smalltest" \
&& FIN_NUM_GAMES="4000" \
&& NUM_EVAL_GAMES="1" \
&& NUM_HU="40" \
&& lr="0.1" \
&& python main.py train --lamda 0 --save_path saved_models --episodes ${FIN_NUM_GAMES} --name $TMP_TRAIN_NAME --type nn --lr ${lr} --hidden_units ${NUM_HU} > ${TMP_TRAIN_NAME}_train.txt \
&& TMP_MODELFILE=$(ls saved_models/ | grep .*${TMP_TRAIN_NAME}.*${FIN_NUM_GAMES}.tar | head -n 1)

# see tdd_unit
#ADD batchbaselr005_20231030_1844_06_897406_1000000.tar td-gammon/td_gammon/saved_models/

RUN export DEBIAN_FRONTEND=noninteractive \
&& cd td-gammon/td_gammon \
&& TMP_TRAIN_NAME="smalltest" \
&& FIN_NUM_GAMES="4000" \
&& NUM_EVAL_GAMES="20" \
&& NUM_HU="40" \
&& lr="0.1" \
&& TMP_MODELFILE=$(ls saved_models/ | grep .*${TMP_TRAIN_NAME}.*${FIN_NUM_GAMES}.tar | head -n 1) \
&& python main.py evaluate --episodes $NUM_EVAL_GAMES --hidden_units_agent0 ${NUM_HU} --hidden_units_agent1 ${NUM_HU} --type nn --model_agent0 saved_models/${TMP_MODELFILE} --model_agent1 saved_models/${TMP_MODELFILE} >  ${TMP_TRAIN_NAME}_eval_in.txt \
&& cat ${TMP_TRAIN_NAME}_eval_in.txt | python ../analyze/analyze_batch_gnu.py ${TMP_TRAIN_NAME} /tmp/ > ${TMP_TRAIN_NAME}_eval_analyzed.txt

#CMD sh -c "cat td-gammon/td_gammon/smalltest_train.txt"

CMD sh -c "cat td-gammon/td_gammon/smalltest_train.txt; cat td-gammon/td_gammon/smalltest_eval_analyzed.txt"
#CMD sh -c "cat td-gammon/td_gammon/smalltest_train.txt; cat td-gammon/td_gammon/smalltest_eval_in.txt"
#CMD sh -c "cat td-gammon/td_gammon/smalltest_eval_in.txt"

#CMD sh -c "ls /td-gammon/td_gammon/*"
